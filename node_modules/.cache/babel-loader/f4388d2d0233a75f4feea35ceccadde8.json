{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ayca\\\\Documents\\\\Visual Studio Code\\\\unrou\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ayca\\\\Documents\\\\Visual Studio Code\\\\unrou\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayca\\\\Documents\\\\Visual Studio Code\\\\unrou\\\\src\\\\Users.js\";\nimport React from \"react\";\nexport default class Users extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      person: null\n    };\n\n    this.renderTableHeader = () => {\n      return Object.keys(this.state.users[0]).map(attr => /*#__PURE__*/React.createElement(\"th\", {\n        key: attr,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 56\n        }\n      }, attr.toUpperCase()));\n    };\n\n    this.renderTableRows = () => {};\n  }\n\n  /*\r\n  async componentDidMount() {\r\n    const url = \"http://localhost:3001/api/users\";\r\n    const response = await fetch(url);\r\n    const allUsers = await response.json();\r\n    this.setState({ allUsers, loading: false });\r\n  }\r\n  */\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, response, users;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            url = \"http://localhost:3001/api/users\";\n\n            _this.setState({\n              isLoading: true\n            });\n\n            _context.next = 4;\n            return fetch(url);\n\n          case 4:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 8;\n            return response.json();\n\n          case 8:\n            users = _context.sent;\n            console.log(users);\n\n            _this.setState({\n              users,\n              isLoading: false\n            });\n\n            _context.next = 14;\n            break;\n\n          case 13:\n            _this.setState({\n              isError: true,\n              isLoading: false\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  render() {\n    const _this$state = this.state,\n          users = _this$state.users,\n          isLoading = _this$state.isLoading,\n          isError = _this$state.isError;\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    if (isError) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }\n      }, \"ERROR!\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    }, \"users\");\n  }\n  /*\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading...</div>;\r\n    }\r\n      if (!this.state.allUsers) {\r\n      return <div>No users were added to the DB!</div>;\r\n    }\r\n      \r\n    return (\r\n      <div>\r\n        <div>{JSON.stringify(this.state.allUsers)}</div>\r\n      </div>\r\n    );\r\n  \n    return (\r\n      <div>\r\n        {this.state.map((userInfo) => {\r\n          return <h1>{userInfo.name}</h1>\r\n        })\r\n        }\r\n      </div>\r\n    )\r\n    */\n\n\n}","map":{"version":3,"sources":["C:/Users/ayca/Documents/Visual Studio Code/unrou/src/Users.js"],"names":["React","Users","Component","state","loading","person","renderTableHeader","Object","keys","users","map","attr","toUpperCase","renderTableRows","componentDidMount","url","setState","isLoading","fetch","response","ok","json","console","log","isError","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KADyC;;AAAA,SA+BjDC,iBA/BiD,GA+B7B,MAAK;AACvB,aAAOC,MAAM,CAACC,IAAP,CAAY,KAAKL,KAAL,CAAWM,KAAX,CAAiB,CAAjB,CAAZ,EAAiCC,GAAjC,CAAqCC,IAAI,iBAAG;AAAI,QAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAChDA,IAAI,CAACC,WAAL,EADgD,CAA5C,CAAP;AAID,KApCgD;;AAAA,SAsCjDC,eAtCiD,GAsC/B,MAAK,CAEtB,CAxCgD;AAAA;;AAMjD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAEQC,EAAAA,iBAAiB,GAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,GADiB,GACX,iCADW;;AAEvB,YAAA,KAAI,CAACC,QAAL,CAAc;AAACC,cAAAA,SAAS,EAAE;AAAZ,aAAd;;AAFuB;AAAA,mBAIAC,KAAK,CAACH,GAAD,CAJL;;AAAA;AAIjBI,YAAAA,QAJiB;;AAAA,iBAMpBA,QAAQ,CAACC,EANW;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAODD,QAAQ,CAACE,IAAT,EAPC;;AAAA;AAOfZ,YAAAA,KAPe;AAQrBa,YAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;;AACA,YAAA,KAAI,CAACO,QAAL,CAAc;AAACP,cAAAA,KAAD;AAAQQ,cAAAA,SAAS,EAAC;AAAlB,aAAd;;AATqB;AAAA;;AAAA;AAWrB,YAAA,KAAI,CAACD,QAAL,CAAc;AAACQ,cAAAA,OAAO,EAAC,IAAT;AAAeP,cAAAA,SAAS,EAAC;AAAzB,aAAd;;AAXqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAaxB;;AAcDQ,EAAAA,MAAM,GAAE;AAAA,wBAC8B,KAAKtB,KADnC;AAAA,UACCM,KADD,eACCA,KADD;AAAA,UACQQ,SADR,eACQA,SADR;AAAA,UACmBO,OADnB,eACmBA,OADnB;;AAGN,QAAGP,SAAH,EAAa;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,QAAGO,OAAH,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AAED,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAED;AAID;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAlFmD","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport default class Users extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    person: null\r\n  };\r\n\r\n  /*\r\n  async componentDidMount() {\r\n    const url = \"http://localhost:3001/api/users\";\r\n    const response = await fetch(url);\r\n    const allUsers = await response.json();\r\n    this.setState({ allUsers, loading: false });\r\n  }\r\n  */\r\n\r\n  async componentDidMount(){\r\n    const url = \"http://localhost:3001/api/users\";\r\n    this.setState({isLoading: true})\r\n\r\n    const response = await fetch(url)\r\n\r\n    if(response.ok){\r\n      const users = await response.json()\r\n      console.log(users)\r\n      this.setState({users, isLoading:false})\r\n    }else{\r\n      this.setState({isError:true, isLoading:false})\r\n    }\r\n  }\r\n\r\n\r\n  renderTableHeader = () =>{\r\n    return Object.keys(this.state.users[0]).map(attr =><th key={attr}>\r\n      {attr.toUpperCase()}\r\n    </th>\r\n    )\r\n  }\r\n\r\n  renderTableRows = () =>{\r\n    \r\n  }\r\n\r\n  render(){\r\n    const {users, isLoading, isError} = this.state\r\n\r\n    if(isLoading){\r\n      return <div>Loading...</div>\r\n    }\r\n\r\n    if(isError){\r\n      return <div>ERROR!</div>\r\n    }\r\n\r\n    return <div>users</div>\r\n\r\n  }\r\n\r\n\r\n\r\n  /*\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading...</div>;\r\n    }\r\n\r\n    if (!this.state.allUsers) {\r\n      return <div>No users were added to the DB!</div>;\r\n    }\r\n\r\n    \r\n    return (\r\n      <div>\r\n        <div>{JSON.stringify(this.state.allUsers)}</div>\r\n      </div>\r\n    );\r\n \r\n    return (\r\n      <div>\r\n        {this.state.map((userInfo) => {\r\n          return <h1>{userInfo.name}</h1>\r\n        })\r\n        }\r\n      </div>\r\n    )\r\n    */\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}